{"version":3,"file":"static/js/445.f47f67d3.chunk.js","mappings":"8OAAA,IAAMA,EAAW,gCACXC,EAAU,2CAET,SAASC,IACd,OAAOC,MAAM,GAAD,OAAIH,EAAJ,4BAAgCC,IAGvC,SAASG,EAAiBC,GAC/B,OAAOF,MAAM,GAAD,OACPH,EADO,wBACiBC,EADjB,wCACwDI,IAG/D,SAASC,EAAUC,GACxB,OAAOJ,MAAM,GAAD,OAAIH,EAAJ,iBAAqBO,EAArB,oBAAmCN,EAAnC,oBAEP,SAASO,EAAYD,GAC1B,OAAOJ,MAAM,KAAD,OACZH,EADY,iBACKO,EADL,oBACmBN,EADnB,6B,yGCfd,EAA0B,4BAA1B,EAA6D,yBAA7D,EAA6F,yB,kBCI9E,SAASQ,IACtB,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SAC/B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACR,GAAKP,EAAL,CAKEM,GAAW,IAEXf,EAAAA,EAAAA,IAAiBS,GACdQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAL,GACJC,GAAS,OAAID,EAAMQ,aAEpBC,OAAM,SAAAC,GAAK,OAAIA,EAAMC,WACrBC,SAAQ,WACPT,GAAW,SAKhB,CAACN,IAkBJ,OACE,4BACE,kBAAMgB,SAlBW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAcF,EAAEG,cAAcC,SAASrB,MAAMsB,MAAMC,OACzD,IAAKJ,EAGH,OAFAK,MAAM,iCACNzB,EAAgB,IAGlBA,EAAgB,CACdC,MAAOmB,IAETF,EAAEG,cAAcK,QAEhBC,QAAQC,IAAIV,EAAEG,cAAcC,SAASrB,MAAMsB,QAKzC,WACE,4BACE,kBACEM,KAAK,OACLC,KAAK,QAGLC,UAAQ,EACRC,YAAY,+BAIhB,mBAAQH,KAAK,SAAb,oBACCvB,IAAW,0CAGI,IAAjBF,EAAM6B,SAAiB3B,IAAW,2CACnC,0BACE,eAAI4B,UAAWC,EAAf,SACG/B,EAAMgC,KACL,gBAAGC,EAAH,EAAGA,MAAO1C,EAAV,EAAUA,GAAI2C,EAAd,EAAcA,cAAd,OACED,IACE,gBAAaH,UAAWC,EAAxB,UACGG,GACC,gBACEC,IAAG,yCAAoCD,GACvCE,IAAKH,KAGP,gBACEE,IACE,2EAEFC,IAAKH,EACLI,MAAM,WAOV,SAAC,KAAD,CAAMP,UAAWC,EAAQO,GAAE,kBAAa/C,GAAxC,SACG0C,MApBI1C,e,8ECrEV,SAASgD,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,GFInF,CAAgBJ,KAAQ,EAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,wIHIwE","sources":["Services/fetch.jsx","webpack://react-homework-template/./src/components/MoviesPage/MoviesPage.module.css?564c","components/MoviesPage/MoviesPage.jsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'api_key=bb0c5b52be3456598a7badc1793c41c3';\n\nexport function FetchMovies() {\n  return fetch(`${BASE_URL}trending/all/day?${API_KEY}`);\n}\n\nexport function fetchSearchMovie(input) {\n  return fetch(\n    `${BASE_URL}search/movie?${API_KEY}&language=en-US&page=1&query=${input}`\n  );\n}\nexport function fetchCast(id) {\n  return fetch(`${BASE_URL}movie/${id}/credits?${API_KEY}&language=en-US`);\n}\nexport function fetchReview(id) {\n  return fetch(`\n${BASE_URL}movie/${id}/reviews?${API_KEY}&language=en-US&page=1`);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"gallery\":\"MoviesPage_gallery__TVclB\",\"name\":\"MoviesPage_name__QpmIm\",\"card\":\"MoviesPage_card__dHDk8\"};","import { useState, useEffect } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport s from './MoviesPage.module.css';\nimport { fetchSearchMovie } from '../../Services/fetch';\n\nexport default function MoviesPage() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const [films, setFilms] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    const fetch = () => {\n      setLoading(true);\n\n      fetchSearchMovie(query)\n        .then(response => response.json())\n        .then(films => {\n          setFilms([...films.results]);\n        })\n        .catch(error => error.message)\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n\n    fetch();\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const searchQuery = e.currentTarget.elements.query.value.trim();\n    if (!searchQuery) {\n      alert('Enter your search query!');\n      setSearchParams('');\n      return;\n    }\n    setSearchParams({\n      query: searchQuery,\n    });\n    e.currentTarget.reset();\n\n    console.log(e.currentTarget.elements.query.value);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <input\n            type=\"text\"\n            name=\"query\"\n            //   pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            //   title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\"Enter your search query\"\n            // onChange={handleInputChange}\n          />\n        </label>\n        <button type=\"submit\">Search</button>\n        {loading && <h4>Loading...</h4>}\n      </form>\n\n      {films.length === 0 && !loading && <h4>Nothing found</h4>}\n      <div>\n        <ul className={s.gallery}>\n          {films.map(\n            ({ title, id, backdrop_path }) =>\n              title && (\n                <li key={id} className={s.card}>\n                  {backdrop_path ? (\n                    <img\n                      src={`https://image.tmdb.org/t/p/w200${backdrop_path}`}\n                      alt={title}\n                    />\n                  ) : (\n                    <img\n                      src={\n                        'https://www.hostpapa.com/blog/blog/wp-content/uploads/2019/05/image5.png'\n                      }\n                      alt={title}\n                      width=\"200px\"\n                    />\n                  )}\n                  {/* <img\n                    src={`https://image.tmdb.org/t/p/w300${backdrop_path}`}\n                    alt={title}\n                  /> */}\n                  <Link className={s.name} to={`/movies/${id}`}>\n                    {title}\n                  </Link>\n                </li>\n              )\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["BASE_URL","API_KEY","FetchMovies","fetch","fetchSearchMovie","input","fetchCast","id","fetchReview","MoviesPage","useSearchParams","searchParams","setSearchParams","query","get","useState","films","setFilms","loading","setLoading","useEffect","then","response","json","results","catch","error","message","finally","onSubmit","e","preventDefault","searchQuery","currentTarget","elements","value","trim","alert","reset","console","log","type","name","required","placeholder","length","className","s","map","title","backdrop_path","src","alt","width","to","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}