{"version":3,"file":"static/js/445.e75d950f.chunk.js","mappings":"8OAAA,IAAMA,EAAW,gCACXC,EAAU,2CAET,SAASC,IACd,OAAOC,MAAM,GAAD,OAAIH,EAAJ,4BAAgCC,IAGvC,SAASG,EAAiBC,GAC/B,OAAOF,MAAM,GAAD,OACPH,EADO,wBACiBC,EADjB,wCACwDI,IAG/D,SAASC,EAAUC,GACxB,OAAOJ,MAAM,GAAD,OAAIH,EAAJ,iBAAqBO,EAArB,oBAAmCN,EAAnC,oBAEP,SAASO,EAAYD,GAC1B,OAAOJ,MAAM,KAAD,OACZH,EADY,iBACKO,EADL,oBACmBN,EADnB,6B,yGCfd,EAA0B,4BAA1B,EAA6D,yBAA7D,EAA6F,yB,kBCI9E,SAASQ,IACtB,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SAC/B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACR,GAAc,KAAVP,GAIJ,GAAKA,EAAL,CAKEM,GAAW,IAEXf,EAAAA,EAAAA,IAAiBS,GACdQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAL,GACJC,GAAS,OAAID,EAAMQ,aAEpBC,OAAM,SAAAC,GAAK,OAAIA,EAAMC,WACrBC,SAAQ,WACPT,GAAW,YAjBfU,MAAM,8BAsBP,CAAChB,IAYJ,OACE,4BACE,kBAAMiB,SAZW,SAAAC,GACnBA,EAAEC,iBAEFpB,EAAgB,CACdC,MAAOkB,EAAEE,cAAcC,SAASrB,MAAMsB,MAAMC,SAG9CC,QAAQC,IAAIP,EAAEE,cAAcC,SAASrB,MAAMsB,QAKzC,WACE,4BACE,kBACEI,KAAK,OACLC,KAAK,QAGLC,UAAQ,EACRC,YAAY,+BAIhB,mBAAQH,KAAK,SAAb,oBACCrB,IAAW,0CAGI,IAAjBF,EAAM2B,SAAiBzB,IAAW,2CACnC,0BACE,eAAI0B,UAAWC,EAAf,SACG7B,EAAM8B,KACL,gBAAGC,EAAH,EAAGA,MAAOxC,EAAV,EAAUA,GAAIyC,EAAd,EAAcA,cAAd,OACED,IACE,gBAAaH,UAAWC,EAAxB,UACGG,GACC,gBACEC,IAAG,yCAAoCD,GACvCE,IAAKH,KAGP,gBACEE,IACE,2EAEFC,IAAKH,EACLI,MAAM,WAOV,SAAC,KAAD,CAAMP,UAAWC,EAAQO,GAAE,kBAAa7C,GAAxC,SACGwC,MApBIxC,e,8ECnEV,SAAS8C,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,GFInF,CAAgBJ,KAAQ,EAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,wIHIwE","sources":["Services/fetch.jsx","webpack://react-homework-template/./src/components/MoviesPage/MoviesPage.module.css?564c","components/MoviesPage/MoviesPage.jsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3/';\r\nconst API_KEY = 'api_key=bb0c5b52be3456598a7badc1793c41c3';\r\n\r\nexport function FetchMovies() {\r\n  return fetch(`${BASE_URL}trending/all/day?${API_KEY}`);\r\n}\r\n\r\nexport function fetchSearchMovie(input) {\r\n  return fetch(\r\n    `${BASE_URL}search/movie?${API_KEY}&language=en-US&page=1&query=${input}`\r\n  );\r\n}\r\nexport function fetchCast(id) {\r\n  return fetch(`${BASE_URL}movie/${id}/credits?${API_KEY}&language=en-US`);\r\n}\r\nexport function fetchReview(id) {\r\n  return fetch(`\r\n${BASE_URL}movie/${id}/reviews?${API_KEY}&language=en-US&page=1`);\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"gallery\":\"MoviesPage_gallery__PLz7r\",\"name\":\"MoviesPage_name__rHfeD\",\"card\":\"MoviesPage_card__JhZCa\"};","import { useState, useEffect } from 'react';\r\nimport { Link, useSearchParams } from 'react-router-dom';\r\nimport s from './MoviesPage.module.css';\r\nimport { fetchSearchMovie } from '../../Services/fetch';\r\n\r\nexport default function MoviesPage() {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const query = searchParams.get('query');\r\n  const [films, setFilms] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (query === '') {\r\n      alert('Enter your search query!');\r\n      return;\r\n    }\r\n    if (!query) {\r\n      return;\r\n    }\r\n\r\n    const fetch = () => {\r\n      setLoading(true);\r\n\r\n      fetchSearchMovie(query)\r\n        .then(response => response.json())\r\n        .then(films => {\r\n          setFilms([...films.results]);\r\n        })\r\n        .catch(error => error.message)\r\n        .finally(() => {\r\n          setLoading(false);\r\n        });\r\n    };\r\n\r\n    fetch();\r\n  }, [query]);\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    setSearchParams({\r\n      query: e.currentTarget.elements.query.value.trim(),\r\n    });\r\n\r\n    console.log(e.currentTarget.elements.query.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"query\"\r\n            //   pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            //   title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            placeholder=\"Enter your search query\"\r\n            // onChange={handleInputChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Search</button>\r\n        {loading && <h4>Loading...</h4>}\r\n      </form>\r\n\r\n      {films.length === 0 && !loading && <h4>Nothing found</h4>}\r\n      <div>\r\n        <ul className={s.gallery}>\r\n          {films.map(\r\n            ({ title, id, backdrop_path }) =>\r\n              title && (\r\n                <li key={id} className={s.card}>\r\n                  {backdrop_path ? (\r\n                    <img\r\n                      src={`https://image.tmdb.org/t/p/w200${backdrop_path}`}\r\n                      alt={title}\r\n                    />\r\n                  ) : (\r\n                    <img\r\n                      src={\r\n                        'https://www.hostpapa.com/blog/blog/wp-content/uploads/2019/05/image5.png'\r\n                      }\r\n                      alt={title}\r\n                      width=\"200px\"\r\n                    />\r\n                  )}\r\n                  {/* <img\r\n                    src={`https://image.tmdb.org/t/p/w300${backdrop_path}`}\r\n                    alt={title}\r\n                  /> */}\r\n                  <Link className={s.name} to={`/movies/${id}`}>\r\n                    {title}\r\n                  </Link>\r\n                </li>\r\n              )\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["BASE_URL","API_KEY","FetchMovies","fetch","fetchSearchMovie","input","fetchCast","id","fetchReview","MoviesPage","useSearchParams","searchParams","setSearchParams","query","get","useState","films","setFilms","loading","setLoading","useEffect","then","response","json","results","catch","error","message","finally","alert","onSubmit","e","preventDefault","currentTarget","elements","value","trim","console","log","type","name","required","placeholder","length","className","s","map","title","backdrop_path","src","alt","width","to","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}